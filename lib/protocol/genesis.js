// Autogenerated, do not edit.

'use strict';

const data = require('./genesis-data.json');
const genesis = exports;

/*
 * Main
 */

genesis.main = {
  version: 0,
  hash: Buffer.from(
    'd24a10e1cc09aaddb9ca83fd29ffa1b0e8172fba4416e65d54fc71866f51b73f',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x1d00ffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.mainData = Buffer.from(data.main, 'base64');

/*
 * Testnet
 */

genesis.testnet = {
  version: 0,
  hash: Buffer.from(
    'b367537953c6531a35e2fe0d4ac7f046eec4a81ad1b8ee4d1b65f1b7a799b75a',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x1d300000,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.testnetData = Buffer.from(data.testnet, 'base64');

/*
 * Regtest
 */

genesis.regtest = {
  version: 0,
  hash: Buffer.from(
    '5096ce41c75365bc64564ffe77cf20f307d8cb8a14ffe46ce5cef465943cad46',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x207fffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.regtestData = Buffer.from(data.regtest, 'base64');

/*
 * Simnet
 */

genesis.simnet = {
  version: 0,
  hash: Buffer.from(
    '5096ce41c75365bc64564ffe77cf20f307d8cb8a14ffe46ce5cef465943cad46',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x207fffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.simnetData = Buffer.from(data.simnet, 'base64');
