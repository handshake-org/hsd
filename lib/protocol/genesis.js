// Autogenerated, do not edit.

'use strict';

const data = require('./genesis-data.json');
const genesis = exports;

/*
 * Main
 */

genesis.main = {
  version: 0,
  hash: Buffer.from(
    '35420a532c0de06a5d8e39a23bfa5fabd3931c3c22d37e10a0c6d67a30913c16',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x1d00ffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.mainData = Buffer.from(data.main, 'base64');

/*
 * Testnet
 */

genesis.testnet = {
  version: 0,
  hash: Buffer.from(
    '3322622f3ba91aead793c45203bfffa398e00f5a1b5933d864ca7130c3c4d471',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x1d300000,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.testnetData = Buffer.from(data.testnet, 'base64');

/*
 * Regtest
 */

genesis.regtest = {
  version: 0,
  hash: Buffer.from(
    '1b7df87c74996937a8940aeff12c13d47adde588d83331d6a2d25b0f3fb21143',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x207fffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.regtestData = Buffer.from(data.regtest, 'base64');

/*
 * Simnet
 */

genesis.simnet = {
  version: 0,
  hash: Buffer.from(
    '1b7df87c74996937a8940aeff12c13d47adde588d83331d6a2d25b0f3fb21143',
    'hex'),
  prevBlock: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  merkleRoot: Buffer.from(
    '43d9d59c10b0081cbe8d3c114084bbfa5010b6bf035c45c295ec270405aa52c9',
    'hex'),
  witnessRoot: Buffer.from(
    '506f818a9a54eaf3f256221c0d173b0f2bbf4329b2af4ceff1d6b493591e4db0',
    'hex'),
  treeRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  reservedRoot: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  time: 1554268735,
  bits: 0x207fffff,
  nonce: 0x00000000,
  extraNonce: Buffer.from(
    '000000000000000000000000000000000000000000000000',
    'hex'),
  mask: Buffer.from(
    '0000000000000000000000000000000000000000000000000000000000000000',
    'hex'),
  height: 0
};

genesis.simnetData = Buffer.from(data.simnet, 'base64');
